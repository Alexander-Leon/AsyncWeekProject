{"version":3,"sources":["components/Navbar/MenuItems.js","components/Navbar/Navbar.styles.js","components/Navbar/Navbar.js","App.styles.js","components/SideBar.styles.js","components/DataStructures/Data.js","components/Stack/Block.js","components/Stack/Stack.js","components/Queue/Queue.js","components/LinkedList/LinkedList.js","components/BinarySearchTree/BinarySearchTree.js","App.js","index.js"],"names":["menuItems","title","url","createUseStyles","bar","backgroundColor","height","display","justifyContent","alignItems","fontSize","outline","menu","gridTemplateColumns","gridGap","textAlign","width","marginRight","listStyle","navLinks","color","textDecoration","padding","borderRadius","transition","Navbar","classes","useStyles","className","map","item","index","href","app","sideBar","flexDirection","borderRight","window","button","border","grid","cell","cursor","square","margin","stacksquare","position","bottom","total","left","Stack","this","top","data","previous","rtrnitem","Block","props","boxClass","id","num","Reactstack","useSideStyles","useState","stack","setStack","inputNum","setInput","setTotal","nums","setNums","translateDistance","setDistance","children","i","length","push","number","onClick","add","anime","targets","translateX","easing","remove","pop","Queue","LinkedList","BinarySearchTree","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf6022af.chunk.js","sourcesContent":["export const menuItems = [\n    {\n        title: 'Stack',\n        url: '/stack',\n    }, \n    { \n        title: 'Queue',\n        url: '/queue',\n    }, \n    { \n        title: 'Linked List',\n        url: '/linkedlist',\n    }, \n    { \n        title: 'Binary Search Tree',\n        url: 'binarysearchtree'\n    },\n]","import {createUseStyles} from 'react-jss';\n\nexport default createUseStyles({\n    bar:{\n        backgroundColor: '#87CEEB',\n        height: '80px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '1.2rem',\n        outline: '2px solid black'\n    },\n    menu: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(4, 1fr)',\n      gridGap: '10px',\n      textAlign: 'center',\n      width: '70vw',\n      justifyContent: 'end',\n      marginRight: '2rem',\n      listStyle: 'none'\n    },\n    navLinks: {\n        color: 'white',\n        textDecoration: 'none',\n        padding: '0.5rem 1rem',\n        '&:hover': {\n            backgroundColor: '#6d76f7',\n            borderRadius: '4px',\n            transition: 'all 0.2s ease-out'\n        }\n    }\n   \n  })","import React from 'react';\nimport {menuItems} from './MenuItems'\nimport useStyles from './Navbar.styles'\n\nconst Navbar = () => {\n    const classes = useStyles();\n    return (\n        <nav className={classes.bar}>\n            <h1 className=\"navbar-logo\">React</h1>\n            <ul className={classes.menu}>\n                {menuItems.map((item, index)=> {\n                    return (\n                    <li key={index}>\n                        <a className={classes.navLinks} href={item.url}>{item.title}</a>\n                    </li>\n                    )\n                })}\n                \n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","import {createUseStyles} from 'react-jss';\n\nexport default createUseStyles({\n    app: {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n    }\n  })","import {createUseStyles} from 'react-jss';\n\nexport default createUseStyles({\n    sideBar:{\n        backgroundColor: '#87CEEB',\n        display: 'flex',\n        width: '15%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '1.2rem',\n        borderRight: '2px solid black',\n    },\n    window: {\n        display: 'flex',\n        width: '100%',\n        height: '100%'\n    },\n    button: {\n        display: 'flex',\n        backgroundColor: 'black',\n        color: 'white',\n        border: 'none',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-block',\n        margin: '5vh',\n        borderRadius: '50%',\n        width: '8vw',\n        height: '8vw',\n        fontSize: '1vw'\n    },\n    grid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        textAlign: 'center',\n        width: '100%',\n        height: '7.5rem',\n        outline: '2px solid black'\n    },\n    cell: {\n        outline: '2px solid black',\n        cursor: 'pointer'\n    },\n    square: {\n        display: 'flex',\n        width: '28px',\n        height: '28px',\n        margin: '1px',\n        backgroundColor: 'red',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    stacksquare:{\n        display: 'flex',\n        width: '28px',\n        height: '28px',\n        margin: '20px',\n        backgroundColor: 'red',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: '0'\n    }, total:{\n        display: 'flex',\n        width: '25%',\n        height: '25%',\n        backgroundColor: '#00FF00',\n        position: 'absolute',\n        justifyContent: 'center',\n        alignItems: 'center',\n        left: '45%',\n        bottom: '35%',\n        fontSize: '32px'\n    }\n    })","export class Stack {\n  // Stack constructor function\n  constructor () {\n    // your code here\n    this.top = null\n  }\n\n  // Stack.prototype.add\n  add (item) {\n    this.top = {data: item, previous: this.top}\n    return this;\n  }\n\n  // Stack.prototype.remove\n  remove () {\n    if (this.top){\n    let rtrnitem = this.top.data\n    this.top = this.top.previous\n    return rtrnitem\n    } else {\n      return undefined\n    }\n  }\n}\n\n// -----------------------------------------\n// Queues\nclass Queue {\n  // Queue constructor function\n  constructor () {\n    this.queue = null\n  }\n\n  // Queue.prototype.add\n  add (item) {\n   if (!this.queue){\n    this.queue = {data: item, next: null}\n   } else {\n     let nxt = this.queue\n     while(nxt.next){\n       nxt = nxt.next\n     }\n     nxt.next = {data: item, next: null}\n   }\n    return this;\n  }\n\n  // Queue.prototype.remove\n  remove () {\n    if (this.queue){\n    let rtrn = this.queue.data\n    this.queue = this.queue.next\n    return rtrn\n    } else {\n      return undefined\n    }\n  }\n}\n\n// -----------------------------------------\n// Linked lists\n\nclass LinkedList {\n  // LinkedList constructor function\n  constructor () {\n    this.head = this.tail = null;\n  }\n\n  // LinkedList.prototype.addToTail\n  addToTail (item) {\n    if (!this.tail){\n    this.tail = new ListNode(item)\n    this.head = this.tail\n    } else if (!this.head.next){\n      this.tail = new ListNode(item, this.head)\n      this.head.next = this.tail\n    } else {\n      let temp = new ListNode(item, this.tail)\n      this.tail.next = temp\n      this.tail = temp\n    }\n   \n    return this;\n  }\n\n  // LinkedList.prototype.removeFromTail\n  removeFromTail () {\n    let rtrnVal\n    if (this.tail){\n      if(this.head !== this.tail){\n      rtrnVal = this.tail.item\n    this.tail = this.tail.prev\n    this.tail.next = null\n    return rtrnVal\n      } else {\n        rtrnVal = this.head.item\n        this.tail = null\n        this.head = null\n        return rtrnVal\n      }\n    }\n    return undefined\n  }\n\n  // LinkedList.prototype.forEach\n  forEach (callbackFunc) {\n    // your code here\n    let temp = this.head\n    while (temp.next){\n      callbackFunc(temp.item)\n      temp = temp.next\n    }\n    callbackFunc(temp.item)\n  }\n}\n\nclass ListNode {\n  // ListNode constructor function\n  constructor (item, prev, next) {\n    this.item = item;\n    this.next = next || null;\n    this.prev = prev || null;\n  }\n}\n\n//-----------------------------------------\n// Association lists\n\nclass Alist {\n  // Alist constructor function\n  constructor () {\n    this.head = null\n  }\n\n  // Alist.prototype.set\n  set (key, value) {\n    if (this.head){\n      this.head = new AlistNode(key,value,this.head)\n    } else {\n      this.head = new AlistNode(key,value, null)\n    }\n    return this;\n  }\n\n  // Alist.prototype.get\n  get (key) {\n   let temp = this.head\n   while (temp.next){\n     if (temp.key === key){\n       return temp.value\n     }\n     temp = temp.next\n   }\n   return temp.key === key ? temp.value : undefined\n  }\n}\n\nclass AlistNode {\n  // AlistNode constructor function\n  constructor (key, value, next) {\n    this.key = key;\n    this.value = value;\n    this.next = next;\n  }\n}\n\n//-----------------------------------------\n// Hash Tables\n\nfunction hash (key) {\n  let hashedKey = 0;\n  for (let i = 0; i < key.length; i++) {\n    hashedKey += key.charCodeAt(i);\n  }\n  return hashedKey % 20;\n}\n\nclass HashTable {\n  // HashTable constructor function\n  constructor () {\n    this.buckets = Array(20);\n    for (let i =0; i < this.buckets.length; i++){\n      this.buckets[i] = new Alist()\n    }\n  }\n\n  // HashTable.prototype.set\n  set (key, value) {\n    if (this.buckets[hash(key)].head){\n      this.buckets[hash(key)].head = new AlistNode(key,value, this.buckets[hash(key)].head)\n    } else {\n      this.buckets[hash(key)].head = new AlistNode(key, value, null)\n    }\n    return this;\n  }\n\n  // HashTable.prototype.get\n  get (key) {\n    let temp = this.buckets[hash(key)].head\n    do {\n      if (temp.key === key){\n        return temp.value\n      } else {\n        temp = temp.next\n      }\n    } while (temp.next)\n    return null\n  }\n}\n\n//-----------------------------------------\n// Binary search trees\n\nclass BinarySearchTree {\n  // BinarySearchTree constructor function\n  constructor (val) {\n    this.value = val\n    this.left = null\n    this.right = null\n  }\n\n  // BinarySearchTree.prototype.insert\n  insert (val) {\n    let temp = this\n    while(temp.value !== val){\n      if (temp.value > val){\n        if (temp.left){\n          temp = temp.left\n        } else {\n          temp.left = new BinarySearchTree(val)\n        }\n      } else {\n        if (temp.right){\n          temp = temp.right\n        } else {\n          temp.right = new BinarySearchTree(val)\n        }\n      }\n    }\n    return this;\n  }\n\n  // BinarySearchTree.prototype.min\n  min () {\n    let temp = this\n    while(temp.left){\n      temp = temp.left\n    }\n    return temp.value\n  }\n\n  // BinarySearchTree.prototype.max\n  max () {\n    let temp = this\n    while(temp.right){\n      temp = temp.right\n    }\n    return temp.value\n  }\n\n  // BinarySearchTree.prototype.contains\n  contains (val) {\n    let temp = this\n    while (temp.value !== val){\n      // if left and right node are both less than val it means val isn't there and inversly if theyre both larger then val isnt there\n      if ((temp.left.value < val && temp.right.value < val) || ((temp.right.value > val && temp.left.value > val))){\n        return false\n      }\n      if (temp.value > val){\n        temp = temp.left\n      } else {\n        temp = temp.right\n      }\n    }\n    return true\n  }\n\n  // BinarySearchTree.prototype.traverse\n  traverse (callbackFunc) {\n    const treeStack = new Stack();\n  \n    treeStack.add(this)\n    \n    while(treeStack.top){\n      console.log(treeStack.top.data)\n    \n      if(treeStack.top.data.left){\n        treeStack.add(treeStack.top.data.left)\n      } else if (treeStack.top.data.right){\n        let temp = treeStack.remove()\n        treeStack.add(temp.right)\n        callbackFunc(temp.value)\n      } else {\n        callbackFunc(treeStack.remove().value)\n        if (treeStack.top){\n        treeStack.top.data.left = null\n        }\n      }\n    }\n      return null\n    }\n  }\n\n","import React from 'react'\n\nconst Block = (props) => {\n    \n    return (\n    <div className={props.boxClass} id={props.id}>{props.num}</div>\n    )\n}\n\nexport default Block","import React, {useState} from 'react'\nimport useSideStyles from '../SideBar.styles'\nimport {Stack} from '../DataStructures/Data'\nimport Block from './Block'\nimport anime from 'animejs'\nconst Reactstack = () => {\nconst classes = useSideStyles();\nconst [stack, setStack] = useState(new Stack) \nconst [inputNum, setInput] = useState(0)\nconst [total, setTotal] = useState(0)\nconst [nums, setNums] = useState([])\nconst [translateDistance, setDistance] = useState(1000)\nconst children = []\n\nconst removeClick = () => {\n    anime({\n        targets: '#target',\n        translateX: -(translateDistance),\n        easing: 'easeInOutSine',\n    })\n    setTotal(total + stack.remove()); \n    setStack(stack); \n    nums.pop()\n    setInput(0)\n    setDistance(translateDistance+25)\n    \n}\n\nconst addClick = () => {\n    stack.add(inputNum); \n    setNums([\n    ...nums,inputNum\n    ])\n    setStack(stack); \n    setInput(0);\n    setDistance(translateDistance-25)\n    anime({\n        targets: '#target',\n        translateX: translateDistance,\n        easing: 'easeInOutSine',\n    })\n}\n\nfor (let i = 0; i < nums.length; i++){\n    if ((i+1 < nums.length)){\n    children.push(<div><Block key={i} number={i} id='' num={nums[i]} boxClass={classes.stacksquare} /></div>)\n    } else {\n    children.push(<div><Block key={i} number={i} id='target' num={nums[i]}  boxClass={classes.stacksquare}/></div>)\n    }\n}\n\n\nreturn (\n<div className={classes.window}>\n<div className={classes.sideBar}>\n    <button onClick={() => setTotal(0)}>Clear Total</button>\n        <div className={classes.grid}>\n            <button className={classes.cell} onClick={()=> setInput(1)}>1</button>\n            <button className={classes.cell} onClick={()=> setInput(2)}>2</button>\n            <button className={classes.cell} onClick={()=> setInput(3)}>3</button>\n            <button className={classes.cell} onClick={()=> setInput(4)}>4</button>\n            <button className={classes.cell} onClick={()=> setInput(5)}>5</button>\n            <button className={classes.cell} onClick={()=> setInput(6)}>6</button>\n            <button className={classes.cell} onClick={()=> setInput(7)}>7</button>\n            <button className={classes.cell} onClick={()=> setInput(8)}>8</button>\n            <button className={classes.cell} onClick={()=> setInput(9)}>9</button>\n            <button className={classes.cell} onClick={() => {inputNum >= 0 ? setInput(inputNum*-1):setInput(inputNum) }}>-</button>\n            <button className={classes.cell} onClick={()=> setInput(0)}>0</button>\n            <button className={classes.cell} onClick={() => {inputNum >= 0 ? setInput(inputNum):setInput(inputNum*-1) }}>+</button>\n        </div> \n    <button className={classes.button} onClick={() => addClick()}>Add to Stack</button>\n    <button className={classes.button} onClick={() => {stack.top ? removeClick() : setTotal(total)} }>Remove from stack</button>\n</div>\n<div>\n<div className={classes.total}>{total}</div>\n<Block num={inputNum} boxClass={classes.square} />\n<div>\n{children}\n</div>\n</div>\n</div>\n)\n\n}\n\nexport default Reactstack","import React from 'react'\n\nconst Queue = () => {\n\nreturn (<div>\n    This is a queue\n</div>)\n\n}\n\nexport default Queue","import React from 'react'\n\nconst LinkedList = () => {\n\nreturn (<div>\n    This is a LinkedList\n</div>)\n\n}\n\nexport default LinkedList","import React from 'react'\n\nconst BinarySearchTree = () => {\n\nreturn (<div>\n    This is a BinarySearchTree\n</div>)\n\n}\n\nexport default BinarySearchTree","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar.js'\nimport useStyles from './App.styles'\nimport Stack from './components/Stack/Stack.js'\nimport Queue from './components/Queue/Queue.js'\nimport LinkedList from './components/LinkedList/LinkedList.js'\nimport BinarySearchTree from './components/BinarySearchTree/BinarySearchTree.js'\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n   <Router>\n     <Navbar />\n     <main className={classes.app}>\n       <Route exact path='/' component={Stack}/>\n       <Route exact path='/stack' component={Stack}/>\n       <Route exact path='/queue' component={Queue}/>\n       <Route exact path='/linkedlist' component={LinkedList} />\n       <Route exact path='/binarysearchtree' component={BinarySearchTree} />\n     </main>\n   </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}